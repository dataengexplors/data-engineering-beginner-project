"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[9268],{79268:(e,r,t)=>{t.r(r),t.d(r,{default:()=>s});var i=t(12307),n=t(59686),a=t(54262);const s={id:"@jupyterlab/markedparser-extension:plugin",description:"Provides the Markdown parser.",autoStart:!0,provides:n.IMarkdownParser,requires:[i.IEditorLanguageRegistry],activate:(e,r)=>(o.initializeMarked(r),{render:e=>new Promise(((r,t)=>{(0,a.marked)(e,((e,i)=>{e?t(e):r(i)}))}))})};var o;!function(e){let r=!1;e.initializeMarked=function(e){r||(r=!0,a.marked.setOptions({gfm:!0,sanitize:!1,langPrefix:"language-",highlight:(r,t,i)=>{const n=(e,r)=>(i&&i(e,r),r);if(!t)return n(null,r);const a=document.createElement("div");try{e.highlight(r,e.findBest(t),a).then((()=>n(null,a.innerHTML))).catch((e=>n(e,r)))}catch(e){return console.error(`Failed to highlight ${t} code`,e),n(e,r)}}}))}}(o||(o={}))}}]);